---
  
  #Firstly, create the bootstrap user for irida and return its outpur
  - name: Create the bootstrap user
    command: chdir="{{ galaxy_server_dir }}" .venv/bin/python scripts/api/manage_bootstrap_user.py -c "{{ galaxy_config_file }}" create -u "{{ tools_admin_username }}" -e "{{ tools_admin_email }}" -p "{{ tools_admin_password }}"
    register: api_key
    become: yes
    become_user: galaxy
    
  - debug: var=api_key
  
  #set the api key for irida to the one that was returned
  - set_fact: galaxy_tools_api_key="{{ api_key.stdout_lines[0] }}" 
  
  
  #Add the admin user to galaxy.ini (check to see if the admin users line already exists)
  - name: Check/Set bootstrap user as Galaxy Admin if admin_users tag is already in the config file
    replace: dest={{ galaxy_config_file }} regexp="^[ ]*admin_users[ ]*=[ ]*" replace="admin_users = {{ tools_admin_email }},"  #"
    register: admin_users_found
    become: yes
    become_user: galaxy

  - name: Set bootstrap user as Galaxy Admin
    lineinfile: dest={{ galaxy_config_file }} state=present insertafter="app:main" line="admin_users = {{ tools_admin_email }}"  #"
    when: admin_users_found.msg == ""
    become: yes
    become_user: galaxy
    
  #Add the irida toolshed to the toolshed conf file.
  - name: Add the irida toolshed to the toolshed conf file.
    lineinfile: dest="{{ galaxy_server_dir }}/config/tool_sheds_conf.xml" insertbefore="</tool_sheds>" line='<tool_shed name="IRIDA Tool Shed" url="https://irida.corefacility.ca/galaxy-shed/" />' state=present
    become: yes
    become_user: galaxy
    
  #Copy the multiple tool install_tools script over
  - name: Copy install_tool_shed_tools.py to galaxy_app
    copy: src="install_tool_shed_tools.py" dest="{{ galaxy_server_dir }}/install_tool_shed_tools.py" owner="galaxy" group="galaxy"
    become: yes
    become_user: galaxy
    
  #Copy the tool list to galaxy_server_dir
  - name: Copy the tool list to galaxy_server_dir
    copy: src="tool_list.yml" dest="{{ galaxy_server_dir }}/tool_list.yml" owner=galaxy group=galaxy
    become: yes
    become_user: galaxy
  
  #insert the snvphyl tool section
  - name: Insert the snvphyl tool collection menu into the integrated_tool_panel.xml
    lineinfile: dest="/mnt/galaxy/var/integrated_tool_panel.xml" insertbefore="^</toolbox>" line="{{ item }}" state=present
    with_items:
      - "<section id='snvphyl' name='snvPhyl'>"
      - "</section>"
    become: yes
    become_user: galaxy
    
  #restart Galaxy
  - name: stop Galaxy
    shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --stop-daemon"
    become: yes
    become_user: galaxy
    
  - name: Wait for Galaxy to stop
    wait_for: port=8080 delay=5 state=stopped timeout=300
  
  - name: Start Galaxy
    shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --daemon"
    become: yes
    become_user: galaxy
    
  - name: Wait for Galaxy to start
    wait_for: port=8080 delay=5 state=started timeout=600
    
  #Install the tools!
  - name: Install the toolshed tools!
    command: chdir="{{ galaxy_server_dir }}" .venv/bin/python install_tool_shed_tools.py -g "{{ galaxy_tools_galaxy_instance_url }}" -a "{{ galaxy_tools_api_key }}" -t tool_list.yml
    become: yes
    become_user: galaxy
    ignore_errors: true
    
  #Now de admin the irida user..
  #- name: De-admin the irida user
  #  replace: dest="{{ galaxy_config_file }}" regexp="{{ tools_admin_email}}[,]?" replace=""
  #  become: yes
  #  become_user: galaxy
    
  - name: Edit the Irida config file with the galaxy users details.
    lineinfile: dest="{{ irida_conf }}/irida.conf" regexp="{{ item.reg }}" line="{{ item.line }}"
    become: yes
    become_user: root
    with_items:
      - { reg: "galaxy.execution.url=", line: "galaxy.execution.url={{ galaxy_tools_galaxy_instance_url }}" }
      - { reg: "galaxy.execution.apiKey=", line: "galaxy.execution.apiKey={{ galaxy_tools_api_key }}" }
      - { reg: "galaxy.execution.email=", line: "galaxy.execution.email={{ tools_admin_email }}" }
      
  # Finally! - Restart tomcat!
  - name: restart tomcat!
    service: name=tomcat7 state=restarted
    become: yes
    become_user: root
    
  #restart Galaxy
  - name: stop Galaxy
    shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --stop-daemon"
    become: yes
    become_user: galaxy
    
  - name: Wait for Galaxy to stop
    wait_for: port=8080 delay=5 state=stopped timeout=300
  
  - name: Start Galaxy
    shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --daemon"
    become: yes
    become_user: galaxy
    
  - name: Wait for Galaxy to start
    wait_for: port=8080 delay=5 state=started timeout=600